"""
Problem Statement:
- You have to implement the is_formation_possible() function which will find
    whether a given word can be formed by combining two words from a dictionary
    We assume that all words are in lower case.

Input:
- A dictionary and a query word containing lowercase characters.
Output:
- Returns True if the given word can be generated by combining two words
    from the dictionary.

Sample Input:
- dictionary = ["the", "hello", "there", "answer", "any"
                     "by", "world", "their", "abc"]
    word = "helloworld"
Sample Output:
- True
"""


from Trie import Trie
# Create Trie => trie = Trie()
# TrieNode => {children, is_end_word, char,
# mark_as_leaf(), unmark_as_leaf()}
# get_root => trie.get_root()
# Insert a Word => trie.insert(key)
# Search a Word => trie.search(key) return true or false
# Delete a Word => trie.delete(key)


def is_formation_possible(dictionary, word):
    trie = Trie()
    for w in dictionary:
        trie.insert(w)

    current_node = trie.root
    for i in range(len(word)):
        index = trie.get_index(word[i])
        if not current_node.children[index]:
            return False
        current_node = current_node.children[index]
        if current_node.is_end_word:
            if trie.search(word[i+1:]):
                return True

    return False


if __name__ == '__main__':
    keys = ["the", "hello", "there", "answer",
            "any", "educative", "world", "their", "abc"]
    print(is_formation_possible(keys, "helloworld"))
